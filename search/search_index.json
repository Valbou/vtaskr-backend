{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"vTaskr Backend Documentation (Dev Doc) vTaskr is a to do list application for personnal use. The project is under active developpement, but not ready for production. Some breaking changes may appear without warning. You are visiting the backend developer documentation . Code repository available here: vTaskr Backend . If you are looking for frontend go to vTaskr Frontend . vTaskr Backend use CPython 3.10+, Flask and Gunicorn. Databases needed: Postgres 15+, Redis 6+. To See more details about dependencies, you can read pyproject.toml file. New to vTaskr To install vTaskr on promise: Getting Started . The project vTaskr is a project to provide features to manage time and free your mind. This is possible if it's easy to use it. So productivity and efficiency are mandatory to keep using it. It's the primary focus ! To continue to develop vTaskr with pleasure, we need to keep base code clear, and clearly separate concerns. To contribute, please, keep this elements in mind. Repository structure At first level you can find: * alembic : used to version database and track migrations. * docs : used to provide this documentation with Mkdocs. * hooks : some tools to help to be a good developer, and limit commits with bad PEP8 practicises before any CI. Need to be installed manually using shell command provided inside. * src : vTaskr source code. * tests : vTaskr tests (unit tests and integration tests). * LICENSE : just to precise it's a GNU GPL v3 project. * pyproject.toml : manage project dependencies and configs. * README.md : to help users to find the doc :). * run.sh : just a helper to run a dev HTTP server locally (if you need it). * template.env : a .env template to keep up to date ! * trad_*.hs : some helpers files to manage translation. Actually, the project is splitted in \"apps\" in the \"src\" sub directory: * base : provide project global utilitaries (like a backend home page ) * colors : provide elements to manage colors (but may disapear in a near futur to limit dependecies. Initially separated to limit duplicate code...) * events : provide a basic internal event service to pass data cross apps. * libs : provide external lib specific adapters. * notifications : provide features to send informations to a user. * ports : provide all bases classes to inherit from, for your adapters. * static : provide some assets to insert in backend features like email or backend home page . * tasks : provide elements to manage \"to do lists\", project management. * users : provide elements to manage users authentication and authorizations. This app may be replaced by any Identity and Access Manager (IAM) like Keycloak. Excepting \"libs\", \"ports\", \"static\", all apps can be seen as a microservice, and could be separated in many dockers instances for scalability.","title":"Home"},{"location":"#vtaskr-backend-documentation-dev-doc","text":"vTaskr is a to do list application for personnal use. The project is under active developpement, but not ready for production. Some breaking changes may appear without warning. You are visiting the backend developer documentation . Code repository available here: vTaskr Backend . If you are looking for frontend go to vTaskr Frontend . vTaskr Backend use CPython 3.10+, Flask and Gunicorn. Databases needed: Postgres 15+, Redis 6+. To See more details about dependencies, you can read pyproject.toml file.","title":"vTaskr Backend Documentation (Dev Doc)"},{"location":"#new-to-vtaskr","text":"To install vTaskr on promise: Getting Started .","title":"New to vTaskr"},{"location":"#the-project","text":"vTaskr is a project to provide features to manage time and free your mind. This is possible if it's easy to use it. So productivity and efficiency are mandatory to keep using it. It's the primary focus ! To continue to develop vTaskr with pleasure, we need to keep base code clear, and clearly separate concerns. To contribute, please, keep this elements in mind.","title":"The project"},{"location":"#repository-structure","text":"At first level you can find: * alembic : used to version database and track migrations. * docs : used to provide this documentation with Mkdocs. * hooks : some tools to help to be a good developer, and limit commits with bad PEP8 practicises before any CI. Need to be installed manually using shell command provided inside. * src : vTaskr source code. * tests : vTaskr tests (unit tests and integration tests). * LICENSE : just to precise it's a GNU GPL v3 project. * pyproject.toml : manage project dependencies and configs. * README.md : to help users to find the doc :). * run.sh : just a helper to run a dev HTTP server locally (if you need it). * template.env : a .env template to keep up to date ! * trad_*.hs : some helpers files to manage translation. Actually, the project is splitted in \"apps\" in the \"src\" sub directory: * base : provide project global utilitaries (like a backend home page ) * colors : provide elements to manage colors (but may disapear in a near futur to limit dependecies. Initially separated to limit duplicate code...) * events : provide a basic internal event service to pass data cross apps. * libs : provide external lib specific adapters. * notifications : provide features to send informations to a user. * ports : provide all bases classes to inherit from, for your adapters. * static : provide some assets to insert in backend features like email or backend home page . * tasks : provide elements to manage \"to do lists\", project management. * users : provide elements to manage users authentication and authorizations. This app may be replaced by any Identity and Access Manager (IAM) like Keycloak. Excepting \"libs\", \"ports\", \"static\", all apps can be seen as a microservice, and could be separated in many dockers instances for scalability.","title":"Repository structure"},{"location":"about/","text":"About vTaskr vTaskr is initially a simple personal python project to replace a 15 years old PHP private project manager. It's a good opportunity to use best development practices like: Hexagonal Architecture, modularity, clean code, test coverage etc... And it's a good opportunity to make it open source. I aim to keep this project stable and reactive to stay efficient in use. The backend part is not just a REST API, it's the core providing services. It can be used via API, CLI, Email, Telegram etc... Maintainers The only maintainer at this stage is me: Valentin BOUVAREL alias Valbou. The project is developed (too slowly) during my personal time. If you want to contribute, you can help me in some ways: - giving feedback - creating code - writing tests - writing translations - filling out documentation - etc... Contact me at contact@valbou.fr (EN, ES or FR).","title":"About"},{"location":"about/#about-vtaskr","text":"vTaskr is initially a simple personal python project to replace a 15 years old PHP private project manager. It's a good opportunity to use best development practices like: Hexagonal Architecture, modularity, clean code, test coverage etc... And it's a good opportunity to make it open source. I aim to keep this project stable and reactive to stay efficient in use. The backend part is not just a REST API, it's the core providing services. It can be used via API, CLI, Email, Telegram etc...","title":"About vTaskr"},{"location":"about/#maintainers","text":"The only maintainer at this stage is me: Valentin BOUVAREL alias Valbou. The project is developed (too slowly) during my personal time. If you want to contribute, you can help me in some ways: - giving feedback - creating code - writing tests - writing translations - filling out documentation - etc... Contact me at contact@valbou.fr (EN, ES or FR).","title":"Maintainers"},{"location":"getting-started/","text":"Get Started Install vTaskr No specific skill needed, but we need first to: - Install Postgres 15 or higher - Install Redis 6 or higher - Install Python 3.10 or higher - Create a python virtual environment (venv). apt install postgresql lsb-release redis apt install git python3-venv python3-pip python3 -m venv vtaskr-project cd vtaskr-project git clone git@github.com:Valbou/vtaskr-backend.git cd vtaskr-backend You may need to create a postgres user and a database. Config your own .env file (based on template.env file in project folder). Please change the default SECRET_KEY if you are using sessions. Install dependencies pip install . or to contribute pip install -e . Install translations chmod +x trad_* ./trad_compile_mo.sh users Run migrations alembic upgrade head To run flask # With Werkzeug (dev :5000) flask --app src.flask run # With Gunicorn (prod :8000) gunicorn src.flask:app vTaskr is now usable via CLI or API ! If you need help, create a Github issue. Install dev dependencies pip install .[dev] To run tests python -m coverage run -m unittest -vv To see coverage python -m coverage report To build the documentation To build a local documentation python -m mkdocs build To build and deploy github page documentation python -m mkdocs gh-deploy --theme mkdocs To use your own frontend If you want to use your own frontend, you can see the OpenAPI documentation . ( Public Postman ) To use your own mobile app Actually no webapp or market specific application is planned. You can develop your own using backend API. Projects using vTaskr If you create one (frontend, backend, app...), let me a message with a link to your project. A list of apps using vTaskr backend will be referenced below.","title":"Get Started"},{"location":"getting-started/#get-started","text":"","title":"Get Started"},{"location":"getting-started/#install-vtaskr","text":"No specific skill needed, but we need first to: - Install Postgres 15 or higher - Install Redis 6 or higher - Install Python 3.10 or higher - Create a python virtual environment (venv). apt install postgresql lsb-release redis apt install git python3-venv python3-pip python3 -m venv vtaskr-project cd vtaskr-project git clone git@github.com:Valbou/vtaskr-backend.git cd vtaskr-backend You may need to create a postgres user and a database. Config your own .env file (based on template.env file in project folder). Please change the default SECRET_KEY if you are using sessions.","title":"Install vTaskr"},{"location":"getting-started/#install-dependencies","text":"pip install . or to contribute pip install -e .","title":"Install dependencies"},{"location":"getting-started/#install-translations","text":"chmod +x trad_* ./trad_compile_mo.sh users","title":"Install translations"},{"location":"getting-started/#run-migrations","text":"alembic upgrade head","title":"Run migrations"},{"location":"getting-started/#to-run-flask","text":"# With Werkzeug (dev :5000) flask --app src.flask run # With Gunicorn (prod :8000) gunicorn src.flask:app vTaskr is now usable via CLI or API ! If you need help, create a Github issue.","title":"To run flask"},{"location":"getting-started/#install-dev-dependencies","text":"pip install .[dev]","title":"Install dev dependencies"},{"location":"getting-started/#to-run-tests","text":"python -m coverage run -m unittest -vv","title":"To run tests"},{"location":"getting-started/#to-see-coverage","text":"python -m coverage report","title":"To see coverage"},{"location":"getting-started/#to-build-the-documentation","text":"To build a local documentation python -m mkdocs build To build and deploy github page documentation python -m mkdocs gh-deploy --theme mkdocs","title":"To build the documentation"},{"location":"getting-started/#to-use-your-own-frontend","text":"If you want to use your own frontend, you can see the OpenAPI documentation . ( Public Postman )","title":"To use your own frontend"},{"location":"getting-started/#to-use-your-own-mobile-app","text":"Actually no webapp or market specific application is planned. You can develop your own using backend API.","title":"To use your own mobile app"},{"location":"getting-started/#projects-using-vtaskr","text":"If you create one (frontend, backend, app...), let me a message with a link to your project. A list of apps using vTaskr backend will be referenced below.","title":"Projects using vTaskr"}]}